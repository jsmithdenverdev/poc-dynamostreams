AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: AWS SAM template for poc-dynamodbstreams.

Resources:
  ###############################################
  # TABLES
  ###############################################
  OrganizationTable:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      BillingMode: PROVISIONED
      TableName: poc-organizations
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  UserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      BillingMode: PROVISIONED
      TableName: poc-users
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  ###############################################
  # QUEUES
  ###############################################
  UserDynamoStreamQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: user-dynamo-stream.fifo
      FifoQueue: true
      ContentBasedDeduplication: true
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt UserDynamoStreamDeadLetterQueue.Arn
        maxReceiveCount: 5
  UserDynamoStreamDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: user-dynamo-stream-deadletter.fifo
      FifoQueue: true
  ###############################################
  # IAM ROLES
  ###############################################
  UserDynamoStreamPipeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: pipes.amazonaws.com
            Action: "sts:AssumeRole"
            Condition:
              StringLike:
                "aws:SourceArn":
                  "Fn::Join":
                    - ""
                    - - "arn:"
                      - Ref: "AWS::Partition"
                      - ":pipes:"
                      - Ref: "AWS::Region"
                      - ":"
                      - Ref: "AWS::AccountId"
                      - ":pipe/user-table-dynamo-pipe"
                "aws:SourceAccount":
                  Ref: "AWS::AccountId"
      Path: /
      Policies:
        - PolicyName: SourcePermissions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "dynamodb:DescribeStream"
                  - "dynamodb:GetRecords"
                  - "dynamodb:GetShardIterator"
                  - "dynamodb:ListStreams"
                Resource:
                  - "Fn::GetAtt":
                      - UserTable
                      - StreamArn
        - PolicyName: TargetPermissions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "sqs:SendMessage"
                Resource:
                  - "Fn::GetAtt":
                      - UserDynamoStreamQueue
                      - Arn
  ###############################################
  # FUNCTIONS
  ###############################################
  UserDynamoStreamQueueConsumerFunction:
    Type: "AWS::Serverless::Function"
    Metadata:
      BuildMethod: go1.x
    Properties:
      FunctionName: "poc-user-stream-consumer"
      Handler: bootstrap
      Runtime: provided.al2023
      CodeUri: cmd/user_stream_consumer
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt UserDynamoStreamQueue.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref OrganizationTable
      Policies:
        - SQSPollerPolicy:
            QueueName: !GetAtt UserDynamoStreamQueue.QueueName
  ###############################################
  # EVENT BRIDGE PIPES
  ###############################################
  UserDynamoStreamPipe:
    Type: "AWS::Pipes::Pipe"
    Properties:
      Name: user-table-dynamo-pipe
      RoleArn: !GetAtt UserDynamoStreamPipeRole.Arn
      Source: !GetAtt UserTable.StreamArn
      SourceParameters:
        DynamoDBStreamParameters:
          StartingPosition: LATEST
        FilterCriteria:
          Filters:
            - Pattern: '{ "eventName": ["INSERT", "MODIFY", "DELETE"] }'
      Target: !GetAtt UserDynamoStreamQueue.Arn
      TargetParameters:
        SqsQueueParameters:
          MessageDeduplicationId: !Ref AWS::NoValue
          MessageGroupId: "default-group"
